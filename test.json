{
    "94473585515904": {
        "description": "A custom class to test typing.",
        "inheritsFrom": "94473585542288",
        "memberFields": {
            "doStuff": {
                "isMemberOverload": true,
                "overloads": [
                    {
                        "description": "An instance function that does stuff. Takes an int and a string.",
                        "typeId": "94473585528832"
                    },
                    {
                        "description": "An instance function that does stuff. Takes a string. Specifically for CustomObjectData2.",
                        "typeId": "94473585528864"
                    },
                    {
                        "description": "An instance function that does stuff. Takes an int.",
                        "typeId": "94473585535104"
                    }
                ]
            },
            "secondI": {
                "description": "A value only available on the child class CustomObjectData2.",
                "typeId": "94473585518080"
            }
        },
        "name": "CustomObjectData2",
        "staticFields": {
            "__constructor": {
                "description": "An inline lambda function attached as a constructor function. Specifically for CustomObjectData2.",
                "typeId": "94473585516688"
            },
            "staticOverload": {
                "isStaticOverload": true,
                "overloads": [
                    {
                        "description": "A static function to test overloading. Takes an int.",
                        "typeId": "94473585516880"
                    },
                    {
                        "description": "A static function to test overloading. Takes a string and an int. Specifically for CustomObjectData2.",
                        "typeId": "94473585519360"
                    },
                    {
                        "description": "A static function to test overloading. Takes a string.",
                        "typeId": "94473585519424"
                    }
                ]
            }
        },
        "typeId": "94473585515904"
    },
    "94473585516688": {
        "description": "An inline lambda function attached as a constructor function. Specifically for CustomObjectData2.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "double parameter",
                    "name": "d",
                    "typeId": "94473585528416"
                }
            ],
            "returnTypeId": "94473585515904"
        },
        "isBasicType": true,
        "name": "__constructor",
        "typeId": "94473585516688"
    },
    "94473585516880": {
        "description": "A static function to test overloading. Takes an int.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "int parameter to be used in the function passed.",
                    "name": "i",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "staticOverload",
        "typeId": "94473585516880"
    },
    "94473585518080": {
        "isBasicType": true,
        "name": "int",
        "typeId": "94473585518080"
    },
    "94473585519360": {
        "description": "A static function to test overloading. Takes a string and an int. Specifically for CustomObjectData2.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "string parameter to be used in the function passed.",
                    "name": "s",
                    "typeId": "94473585519584"
                },
                {
                    "description": "int parameter to be used in the function passed.",
                    "name": "i",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "staticOverload",
        "typeId": "94473585519360"
    },
    "94473585519424": {
        "description": "A static function to test overloading. Takes a string.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "string parameter to be used in the function passed.",
                    "name": "s",
                    "typeId": "94473585519584"
                }
            ],
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "staticOverload",
        "typeId": "94473585519424"
    },
    "94473585519584": {
        "isBasicType": true,
        "name": "string",
        "typeId": "94473585519584"
    },
    "94473585528416": {
        "isBasicType": true,
        "name": "double",
        "typeId": "94473585528416"
    },
    "94473585528832": {
        "description": "An instance function that does stuff. Takes an int and a string.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "int parameter",
                    "name": "i",
                    "typeId": "94473585518080"
                },
                {
                    "description": "string parameter",
                    "name": "s",
                    "typeId": "94473585519584"
                }
            ],
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "doStuff",
        "typeId": "94473585528832"
    },
    "94473585528864": {
        "description": "An instance function that does stuff. Takes a string. Specifically for CustomObjectData2.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "string parameter",
                    "name": "s",
                    "typeId": "94473585519584"
                }
            ],
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "doStuff",
        "typeId": "94473585528864"
    },
    "94473585535104": {
        "description": "An instance function that does stuff. Takes an int.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "int parameter",
                    "name": "i",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "doStuff",
        "typeId": "94473585535104"
    },
    "94473585542288": {
        "description": "A custom class to test typing.",
        "memberFields": {
            "doStuff": {
                "isMemberOverload": true,
                "overloads": [
                    {
                        "description": "An instance function that does stuff. Takes an int and a string.",
                        "typeId": "94473585528832"
                    },
                    {
                        "description": "An instance function that does stuff. Takes an int.",
                        "typeId": "94473585535104"
                    }
                ]
            },
            "functionPointer": {
                "description": "A function pointer to bind to lua.",
                "typeId": "94473585575952"
            },
            "i1": {
                "description": "An instance int field.",
                "typeId": "94473585518080"
            },
            "memberAsync": {
                "description": "An member function that does stuff asynchronously and returns a promise.",
                "typeId": "94473585577616"
            },
            "o1": {
                "description": "Sub class data pointer.",
                "typeId": "94473585549568"
            },
            "o2": {
                "description": "Sub class data shared pointer.",
                "typeId": "94473585570768"
            },
            "o3": {
                "description": "Sub class data non-pointer.",
                "typeId": "94473585565616"
            },
            "o4": {
                "description": "Sub class data & reference.",
                "typeId": "94473585565616"
            },
            "s1": {
                "description": "An instance string field.",
                "typeId": "94473585519584"
            },
            "testPassedFunction": {
                "description": "A function to test how many invocations of the functionPointer can be done per second.",
                "typeId": "94473585577648"
            }
        },
        "name": "CustomObjectData",
        "staticFields": {
            "__constructor": {
                "isStaticOverload": true,
                "overloads": [
                    {
                        "description": "An inline lambda function attached as a constructor function.",
                        "typeId": "94473585549600"
                    },
                    {
                        "description": "An overloaded inline lambda function attached as a constructor function. Takes a string instead of an int.",
                        "typeId": "94473585551792"
                    }
                ]
            },
            "d1": {
                "description": "A static double field.",
                "typeId": "94473585528416"
            },
            "staticAsync": {
                "description": "An static function that does stuff asynchronously and returns a promise.",
                "typeId": "94473585545808"
            },
            "staticFunction": {
                "description": "An static function that does stuff.",
                "typeId": "94473585543216"
            },
            "staticFunctionPointer": {
                "description": "A function pointer to bind to lua.",
                "typeId": "94473585543936"
            },
            "staticOverload": {
                "isStaticOverload": true,
                "overloads": [
                    {
                        "description": "A static function to test overloading. Takes an int.",
                        "typeId": "94473585516880"
                    },
                    {
                        "description": "A static function to test overloading. Takes a string.",
                        "typeId": "94473585519424"
                    }
                ]
            }
        },
        "typeId": "94473585542288"
    },
    "94473585543216": {
        "description": "An static function that does stuff.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "int parameter",
                    "name": "num",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "staticFunction",
        "typeId": "94473585543216"
    },
    "94473585543936": {
        "description": "A function pointer to bind to lua.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "int parameter to be used in the function passed.",
                    "name": "i",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585518080"
        },
        "isFunctionPointer": true,
        "memberFields": null,
        "name": "staticFunctionPointer",
        "staticFields": null,
        "typeId": "94473585543936"
    },
    "94473585545808": {
        "description": "An static function that does stuff asynchronously and returns a promise.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "Number of seconds to wait.",
                    "name": "numSeconds",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585551920"
        },
        "isBasicType": true,
        "name": "staticAsync",
        "typeId": "94473585545808"
    },
    "94473585549568": {
        "description": "",
        "name": "reference",
        "referenceTypeId": "94473585565616",
        "typeId": "94473585549568"
    },
    "94473585549600": {
        "description": "An inline lambda function attached as a constructor function.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "int parameter",
                    "name": "num",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585542288"
        },
        "isBasicType": true,
        "name": "__constructor",
        "typeId": "94473585549600"
    },
    "94473585551792": {
        "description": "An overloaded inline lambda function attached as a constructor function. Takes a string instead of an int.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "string parameter",
                    "name": "str",
                    "typeId": "94473585519584"
                }
            ],
            "returnTypeId": "94473585542288"
        },
        "isBasicType": true,
        "name": "__constructor",
        "typeId": "94473585551792"
    },
    "94473585551920": {
        "description": "An awaitable promise of an asynchronous execution.",
        "inheritsFrom": "94473585557856",
        "memberFields": {
            "await": {
                "description": "Block this thread and wait for the promise to resolve.",
                "typeId": "94473585552496"
            },
            "onResolve": {
                "description": "Execute the passed callback function upon completion of the promise. Execution is deferred until the promise returned by onResolve is awaited.",
                "typeId": "94473585554752"
            }
        },
        "name": "SharedPromise",
        "staticFields": null,
        "typeId": "94473585551920"
    },
    "94473585552496": {
        "description": "Block this thread and wait for the promise to resolve.",
        "functionDescription": {
            "parameters": null,
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "await",
        "typeId": "94473585552496"
    },
    "94473585554752": {
        "description": "Execute the passed callback function upon completion of the promise. Execution is deferred until the promise returned by onResolve is awaited.",
        "functionDescription": {
            "parameters": null,
            "returnTypeId": "94473585551920"
        },
        "isBasicType": true,
        "name": "onResolve",
        "templateParameters": [
            "CallbackReturnType"
        ],
        "typeId": "94473585554752"
    },
    "94473585557856": {
        "description": "An awaitable promise of an asynchronous execution.",
        "memberFields": {
            "await": {
                "description": "Block this thread and wait for the promise to resolve.",
                "typeId": "94473585558480"
            },
            "onResolve": {
                "description": "Execute the passed callback function upon completion of the promise. Execution is deferred until the promise returned by onResolve is awaited.",
                "typeId": "94473585561776"
            }
        },
        "name": "SharedPromise",
        "staticFields": null,
        "templateParameters": [
            "PromisedType"
        ],
        "typeId": "94473585557856"
    },
    "94473585558480": {
        "description": "Block this thread and wait for the promise to resolve.",
        "functionDescription": {
            "parameters": null,
            "returnTypeId": "94473585559360"
        },
        "isBasicType": true,
        "name": "await",
        "typeId": "94473585558480"
    },
    "94473585559360": {
        "description": "An instance of a type defined by a template parameter.",
        "isTemplateParameterType": true,
        "name": "templateParameterValue",
        "resolvingTemplateParameterName": "PromisedType",
        "typeId": "94473585559360"
    },
    "94473585561776": {
        "description": "Execute the passed callback function upon completion of the promise. Execution is deferred until the promise returned by onResolve is awaited.",
        "functionDescription": {
            "parameters": null,
            "returnTypeId": "94473585557856"
        },
        "isBasicType": true,
        "name": "onResolve",
        "templateParameters": [
            "CallbackReturnType"
        ],
        "typeId": "94473585561776"
    },
    "94473585565616": {
        "description": "A custom class to test typing a class's sub class.",
        "memberFields": {
            "i2": {
                "description": "Sub data's instance int field.",
                "typeId": "94473585518080"
            },
            "s2": {
                "description": "Sub data's instance string field.",
                "typeId": "94473585519584"
            }
        },
        "name": "CustomObjectSubData",
        "staticFields": null,
        "typeId": "94473585565616"
    },
    "94473585570768": {
        "description": "",
        "name": "reference",
        "referenceTypeId": "94473585565616",
        "typeId": "94473585570768"
    },
    "94473585575952": {
        "description": "A function pointer to bind to lua.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "int parameter to be used in the function passed.",
                    "name": "i",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585518080"
        },
        "isFunctionPointer": true,
        "memberFields": null,
        "name": "functionPointer",
        "staticFields": null,
        "typeId": "94473585575952"
    },
    "94473585577616": {
        "description": "An member function that does stuff asynchronously and returns a promise.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "Number of seconds to wait.",
                    "name": "numSeconds",
                    "typeId": "94473585518080"
                }
            ],
            "returnTypeId": "94473585584528"
        },
        "isBasicType": true,
        "name": "memberAsync",
        "typeId": "94473585577616"
    },
    "94473585577648": {
        "description": "A function to test how many invocations of the functionPointer can be done per second.",
        "functionDescription": {
            "parameters": [
                {
                    "description": "int parameter",
                    "name": "i",
                    "typeId": "94473585581216"
                }
            ],
            "returnTypeId": "94473585528416"
        },
        "isBasicType": true,
        "name": "testPassedFunction",
        "typeId": "94473585577648"
    },
    "94473585581216": {
        "isBasicType": true,
        "name": "size_t",
        "typeId": "94473585581216"
    },
    "94473585584528": {
        "description": "An awaitable promise of an asynchronous execution.",
        "memberFields": {
            "await": {
                "description": "Block this thread and wait for the promise to resolve.",
                "typeId": "94473585585104"
            }
        },
        "name": "Promise",
        "staticFields": null,
        "typeId": "94473585584528"
    },
    "94473585585104": {
        "description": "Block this thread and wait for the promise to resolve.",
        "functionDescription": {
            "parameters": null,
            "returnTypeId": "94473585519584"
        },
        "isBasicType": true,
        "name": "await",
        "typeId": "94473585585104"
    }
}
